name: Deploy FastAPI App to Render

on:
  push:
    branches:
      - main # Deploy only when pushing to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Trigger Render Deployment
        id: trigger_deployment
        run: |
          response=$(curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}" \
           -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
           -H "Content-Type: application/json")
           deployment_id=$(echo $response | jq -r '.deploy.id')
           echo "deployment_id=$deployment_id" >> $GITHUB_ENV
           echo "Deployment triggered with ID: $deployment_id"

      - name: Wait for Deployment to Complete
        run: |
          deployment_id=${{ env.deployment_id }}
          echo "Waiting for deployment $deployment_id to complete..."
          while true; do
            status_response=$(curl -X GET "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys/$deployment_id" \
              -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
              -H "Content-Type: application/json")
              echo $status_response
            status=$(echo $status_response | jq -r '.status')
            echo "Current status: $status"
            if [[ "$status" == "build_failed" || "$status" == "update_failed" || "$status" == "pre_deploy_failed" ]]; then
              echo "Deployment completed with status: $status"
              exit 1
            fi
            if [[ "$status" == "live" ]]; then
              echo "Deployment completed with status: $status"
              break
            fi
            sleep 10  # Wait for 10 seconds before checking again
          done

      # - name: Verify Deployment
      #   run: |
      #     echo "Checking if /stage2 endpoint is live..."
      #     response=$(curl -s -o /dev/null -w "%{http_code}" https://https://fastapi-book-project-e8vc.onrender.com/stage2)
      #     if [ "$response" -ne 200 ]; then
      #       echo "Error: /stage2 is not available (status code: $response)"
      #       exit 1
      #     fi
      #     echo "Deployment successful! /stage2 is live."
